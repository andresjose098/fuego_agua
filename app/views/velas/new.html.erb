<h2 style="font-size: 28px; margin-bottom: 20px;">üïØÔ∏è Personalizar Vela</h2>

<%= form_with model: @vela, local: true do |f| %>

  <!-- Modelo -->
<div style="margin-bottom: 20px;">
  <label style="font-size: 18px;"><strong>Modelo</strong></label><br>
  <%= f.select :modelo, ['Cl√°sico', 'Moderno'], {}, id: "modelo-select", style: "padding: 10px; font-size: 16px; width: 130px;" %>
</div>

  <!-- Estilo -->
  <div style="margin-bottom: 20px;">
    <label style="font-size: 18px;"><strong>Estilo</strong></label><br>
    <%= f.radio_button :estilo, "Color", id: "estilo_color" %>
    <label for="estilo_color" style="margin-right: 15px;">üé® Color</label>

    <%= f.radio_button :estilo, "Texto", id: "estilo_texto" %>
    <label for="estilo_texto" style="margin-right: 15px;">üÖ£ Texto</label>

    <%= f.radio_button :estilo, "Dibujos", id: "estilo_dibujos" %>
    <label for="estilo_dibujos">‚úèÔ∏è Dibujos</label>
  </div>

 <!-- Paleta de colores visual -->
<div style="margin-bottom: 30px;">
  <label style="font-size: 18px;"><strong>Color de la vela</strong></label><br>
  <div id="color-options" style="display: flex; flex-wrap: wrap; gap: 10px; margin-top: 10px;">
    <% colors = ['#f6e2a6', '#f4c5ab', '#dfb6aa', '#3e7a8d', '#2e504d', '#7ebd9c', '#e9e9e9', '#222831'] %>
    <% colors.each_with_index do |color, i| %>
      <label class="color-circle" data-index="<%= i %>">
        <%= f.radio_button :color, color, id: "color_#{i}", style: "display: none;" %>
        <span class="circle" style="background-color: <%= color %>;" data-for="color_<%= i %>"></span>
      </label>
    <% end %>
  </div>
</div>


<!-- Selecci√≥n de dibujos -->
<div id="seleccion-dibujos" style="display: none; margin-bottom: 30px;">
  <label style="font-size: 18px;"><strong>Selecciona un dibujo</strong></label>
  <div style="display: flex; flex-wrap: wrap; gap: 15px; margin-top: 10px;">
    <% dibujos = ['flor', 'arcoiris', 'cara_feliz', 'corazon', 'estrella', 'hoja', 'flor2', 'rama', 'flama'] %>
    <% dibujos.each do |d| %>
      <label style="cursor:pointer;">
        <%= f.radio_button :dibujo, d, style: "display: none;" %>
        <img src="/assets/dibujos/<%= d %>.svg" alt="<%= d %>" width="48" height="48" class="dibujo-icono" data-nombre="<%= d %>">
      </label>
    <% end %>
  </div>
</div>

<!-- Campo de entrada para texto personalizado -->
<div id="campo-texto" style="display: none; margin-bottom: 30px;">
  <label style="font-size: 18px;"><strong>Escribe tu mensaje</strong></label><br>
  <%= f.text_field :mensaje, id: "texto-personalizado", placeholder: "Escribe aqu√≠", style: "padding: 8px; font-size: 16px; width: 200px;" %>
</div>


<style>
  .dibujo-icono {
    border: 2px solid transparent;
    border-radius: 8px;
    transition: transform 0.2s ease, border-color 0.2s ease;
  }

  .dibujo-icono.selected {
    border-color: #f39c12;
    transform: scale(1.1);
  }
</style>


<style>
  .circle {
    display: inline-block;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 2px solid #ccc;
    transition: all 0.3s ease;
  }

  .circle.selected {
    border: 4px solid #f39c12;
    box-shadow: 0 0 6px #f39c12;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const radios = document.querySelectorAll('input[type=radio][name="vela[color]"]');
    const circles = document.querySelectorAll('.circle');

   radios.forEach(radio => {
  radio.addEventListener('change', () => {
    circles.forEach(c => c.classList.remove('selected'));
    const selected = document.querySelector(`span[data-for="${radio.id}"]`);
    if (selected) selected.classList.add('selected');

    updateColorOverlay(radio.value); // Esta l√≠nea aplica el color
  });
});

    // Si hay un valor preseleccionado (al recargar con errores)
    const checked = document.querySelector('input[type=radio][name="vela[color]"]:checked');
    if (checked) {
      const selected = document.querySelector(`span[data-for="${checked.id}"]`);
      if (selected) selected.classList.add('selected');
    }
  });

    document.addEventListener("DOMContentLoaded", () => {
    const modeloSelect = document.getElementById("modelo-select");
    const previewImg = document.getElementById("vela-preview-img");

    modeloSelect.addEventListener("change", () => {
      const modelo = modeloSelect.value.toLowerCase(); // "cl√°sico" o "moderno"
      const imagen = modelo === "moderno" ? "vela_moderna.jpg" : "vela_clasica.jpg";
      previewImg.src = `/assets/${imagen}`;
    });
  });


  

    document.addEventListener("DOMContentLoaded", () => {
    const radios = document.querySelectorAll('input[type=radio][name="vela[color]"]');
    const circles = document.querySelectorAll('.circle');
    const modeloSelect = document.getElementById("modelo-select");
    const previewImg = document.getElementById("vela-preview-img");
    const colorOverlay = document.getElementById("color-overlay");

    // === Cambiar imagen seg√∫n el modelo ===
    modeloSelect.addEventListener("change", () => {
      const modelo = modeloSelect.value.toLowerCase(); // cl√°sico o moderno
      const imagen = modelo === "moderno" ? "vela_moderna.jpg" : "vela_clasica.jpg";
      previewImg.src = `/assets/${imagen}`;
    });

    // === Cambiar color del overlay (sin tocar fondo) ===
    function updateColorOverlay(color) {
      colorOverlay.style.backgroundColor = color;
    }

    radios.forEach(radio => {
      radio.addEventListener('change', () => {
        // Marcar el c√≠rculo
        circles.forEach(c => c.classList.remove('selected'));
        const selected = document.querySelector(`span[data-for="${radio.id}"]`);
        if (selected) selected.classList.add('selected');

        // Aplicar color
        updateColorOverlay(radio.value);
      });
    });

    // Si hay color preseleccionado
    const checked = document.querySelector('input[name="vela[color]"]:checked');
    if (checked) updateColorOverlay(checked.value);
  });

   
function updateColorOverlay(color) {
  const velaBody = document.getElementById("vela-body");
  const velaTop = document.getElementById("vela-top");

  if (velaBody) velaBody.setAttribute("fill", color);
  if (velaTop) velaTop.setAttribute("fill", color);
}



document.addEventListener("DOMContentLoaded", () => {
  const modeloSelect = document.getElementById("modelo-select");
  const radios = document.querySelectorAll('input[type=radio][name="vela[color]"]');

  function actualizarModelo() {
    const modelo = modeloSelect.value.toLowerCase();
    document.getElementById("vela-clasica").style.display = modelo === "cl√°sico" ? "inline" : "none";
    document.getElementById("vela-moderna").style.display = modelo === "moderno" ? "inline" : "none";
  }

  function actualizarColor(color) {
    // Cl√°sica
    const cuerpoClasico = document.getElementById("cuerpo-clasico");
    const topClasico = document.getElementById("top-clasica");

    // Moderna
    const cuerpoModerna = document.getElementById("cuerpo-moderna");
    const topModerna = document.getElementById("top-moderna");

    if (cuerpoClasico) cuerpoClasico.setAttribute("fill", color);
    if (topClasico) topClasico.setAttribute("fill", color);

    if (cuerpoModerna) cuerpoModerna.setAttribute("fill", color);
    if (topModerna) topModerna.setAttribute("fill", color);
  }

  modeloSelect.addEventListener("change", actualizarModelo);

  radios.forEach(radio => {
    radio.addEventListener("change", () => {
      actualizarColor(radio.value);
    });
  });

  // Inicializar
  actualizarModelo();
  const checked = document.querySelector('input[name="vela[color]"]:checked');
  if (checked) actualizarColor(checked.value);
});


  
 document.addEventListener("DOMContentLoaded", () => {
    const estiloRadios = document.querySelectorAll("input[name='vela[estilo]']");
    const dibujosContainer = document.getElementById("seleccion-dibujos");
    const dibujoRadios = document.querySelectorAll('input[name="vela[dibujo]"]');
    const dibujoImg = document.getElementById("dibujo-en-vela");

    function toggleDibujos() {
      const seleccionado = document.querySelector("input[name='vela[estilo]']:checked");
      dibujosContainer.style.display = (seleccionado && seleccionado.value === "Dibujos") ? "block" : "none";

      // Si NO es "Dibujos", ocultamos el dibujo
      if (!seleccionado || seleccionado.value !== "Dibujos") {
        dibujoImg.setAttribute("visibility", "hidden");
      }
    }

    estiloRadios.forEach(radio => {
      radio.addEventListener("change", toggleDibujos);
    });

    dibujoRadios.forEach(radio => {
      radio.addEventListener("change", () => {
        const nombre = radio.value;
        dibujoImg.setAttribute("href", `/assets/dibujos/${nombre}.svg`);
        dibujoImg.setAttribute("visibility", "visible");

        // Resaltar dibujo visualmente
        document.querySelectorAll(".dibujo-icono").forEach(img => img.classList.remove("selected"));
        const imgSeleccionada = document.querySelector(`.dibujo-icono[data-nombre='${nombre}']`);
        if (imgSeleccionada) imgSeleccionada.classList.add("selected");
      });
    });

    // Inicializaci√≥n al cargar
    toggleDibujos();
    const dibujoSeleccionado = document.querySelector('input[name="vela[dibujo]"]:checked');
    if (dibujoSeleccionado) {
      dibujoImg.setAttribute("href", `/assets/dibujos/${dibujoSeleccionado.value}.svg`);
      dibujoImg.setAttribute("visibility", "visible");
    }
  });

  

</script>



<div style="margin-bottom: 30px;">
  <label style="font-size: 18px;"><strong>Vista previa 3D</strong></label><br>
  <div style="margin-top: 10px; width: 220px;">
  <!-- Imagen del dibujo -->


    <svg id="vela-svg" width="100%" height="500" viewBox="0 0 120 250" xmlns="http://www.w3.org/2000/svg">
   

      <defs>
        <!-- Gradiente de luz lateral para 3D -->
        <radialGradient id="grad3d" cx="30%" cy="40%" r="80%">
          <stop offset="0%" stop-color="#ffffff" stop-opacity="0.5"/>
          <stop offset="100%" stop-color="#000000" stop-opacity="0.1"/>
        </radialGradient>
      </defs>

      <!-- Vela Cl√°sica 3D -->
      <g id="vela-moderna" class="modelo-vela">
        <!-- Cuerpo con curva el√≠ptica 3D -->
        <path id="cuerpo-clasico" d="M35,70 
             C45,60 75,60 85,70 
             L85,180 
             C75,190 45,190 35,180 
             Z" fill="#f6e2a6"/>
        <!-- Luz 3D -->
        <path d="M35,70 
             C45,60 75,60 85,70 
             L85,180 
             C75,190 45,190 35,180 
             Z" fill="url(#grad3d)"/>
        <!-- Tapa superior -->
        <ellipse id="top-clasica" cx="60" cy="70" rx="25" ry="10" fill="#f6e2a6"/>
      </g>

      <!-- Vela Moderna 3D (m√°s delgada) -->
      <g id="vela-clasica" class="modelo-vela" style="display: none;">
        <path id="cuerpo-moderna" d="M45,70 
             C52,62 68,62 75,70 
             L75,180 
             C68,188 52,188 45,180 
             Z" fill="#f6e2a6"/>
        <path d="M45,70 
             C52,62 68,62 75,70 
             L75,180 
             C68,188 52,188 45,180 
             Z" fill="url(#grad3d)"/>
        <ellipse id="top-moderna" cx="60" cy="70" rx="18" ry="8" fill="#f6e2a6"/>
      </g>
        <image
  id="dibujo-en-vela"
  href=""
  x="45"
  y="100"
  width="30"
  height="30"
  visibility="hidden"
  style="filter: drop-shadow(0px 0px 2px rgba(0,0,0,0.4));"
/>

<!-- Texto personalizado sobre la vela -->
<text id="svg-texto" x="60" y="135" text-anchor="middle" font-size="14" fill="#000" style="visibility: hidden; font-family: Arial;">
  Texto aqu√≠
</text>

      <!-- Llama centrada -->
      <path d="M60,40 Q63,25 60,10 Q57,25 60,40" fill="orange"/>
      
    </svg>
  </div>
</div>



<!-- Bot√≥n de guardar -->
<div style="margin-top: 0px; text-align: center;">
  <%= f.submit "Guardar Vela", class: "guardar-vela-btn" %>
</div>

<style>
  .guardar-vela-btn {
    background-color: #f39c12;
    color: white;
    border: none;
    padding: 14px 30px;
    font-size: 18px;
    font-weight: bold;
    border-radius: 10px;
    cursor: pointer;
    transition: background 0.3s ease, transform 0.2s ease;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }

  .guardar-vela-btn:hover {
    background-color: #e08e0b;
    transform: scale(1.03);
  }

  .guardar-vela-btn:active {
    transform: scale(0.98);
  }
</style>




<% end %>